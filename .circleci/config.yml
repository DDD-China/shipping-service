version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/shipping-service
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run: ./gradlew dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - run: ./gradlew clean build
      - store_test_results:
          path: build/test-results/test
      - store_artifacts:
          path: build
      - run:
          name: Save build version
          command: |
            CIRCLE_BUILD_NUM_DOCKER=0.1.$CIRCLE_BUILD_NUM
            mkdir -p /tmp/workspace/docker-build
            echo ${CIRCLE_BUILD_NUM_DOCKER} > /tmp/workspace/docker-build/docker-build_number.txt
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - docker-build

  build-docker:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/shipping-service
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install Python
          command: |
            sudo apt install python2.7 python-pip
      - run:
          name: Install aws cli
          command: |
            sudo pip install awscli
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run: ./gradlew build docker
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - attach_workspace: &attach_workspace
          at: /tmp/workspace
      - run:
          name: Tag and push docker image
          command: |
            export CIRCLE_BUILD_NUM_DOCKER="$(cat /tmp/workspace/docker-build/docker-build_number.txt)"
            echo ${CIRCLE_BUILD_NUM_DOCKER}
            $(aws ecr get-login --no-include-email)
            export REPO_NAME=shipping-service
            export ORG_NAME=com.dmall
            export AWS_ECR_REGISTRY=955065381857.dkr.ecr.cn-north-1.amazonaws.com.cn
            docker tag $ORG_NAME/$REPO_NAME:latest $AWS_ECR_REGISTRY/$REPO_NAME:$CIRCLE_BUILD_NUM_DOCKER
            docker push $AWS_ECR_REGISTRY/$REPO_NAME:$CIRCLE_BUILD_NUM_DOCKER
            docker tag $ORG_NAME/$REPO_NAME:latest $AWS_ECR_REGISTRY/$REPO_NAME:latest
            docker push $AWS_ECR_REGISTRY/$REPO_NAME:latest

  deploy-aws:
    docker:
      - image: circleci/python:2
    working_directory: ~/shipping-service
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "e1:6d:4e:b1:06:70:15:77:e7:c6:c0:0d:1e:18:3d:88"
      - attach_workspace: &attach_workspace
          at: /tmp/workspace
      - run:
          name: Deploy service with kubectl
          command: |
            export CIRCLE_BUILD_NUM_DOCKER="$(cat /tmp/workspace/docker-build/docker-build_number.txt)"
            sed -i "s/BUILD_VERSION/$CIRCLE_BUILD_NUM_DOCKER/g" shipping-service-kube.yaml
            ./deploy.sh

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - build-docker:
          requires:
            - build
      - deploy-aws:
          requires:
            - build
            - build-docker
